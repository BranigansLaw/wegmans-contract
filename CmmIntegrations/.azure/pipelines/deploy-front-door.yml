parameters:
  - name: resourceGroup
    type: string

  - name: region
    type: string
  
  - name: azureServiceConnectionId
    type: string
    
  - name: frontDoorName
    type: string
    
  - name: frontDoorFriendlyUrl
    type: string

jobs:
- job: DeployFrontDoor
  displayName: 3. Deploy Front Door
  dependsOn: 
    - DeployPrimaryFunction
    - DeploySecondaryFunction

  variables:
    primaryFunctionAppHostName: $[ dependencies.DeployPrimaryFunction.outputs['ArmTemplateOutputs.functionAppDefaultHostName'] ]
    secondaryFunctionAppHostName: $[ dependencies.DeploySecondaryFunction.outputs['ArmTemplateOutputs.functionAppDefaultHostName'] ]

  pool:
    vmImage: windows-latest

  steps:
    - checkout: none

    - download: current
      displayName: Download Artifacts
      artifact: armTemplates 

    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment: Create Or Update Resource Group action on ${{ parameters.resourceGroup }}'
      inputs:
        azureSubscription: '${{ parameters.azureServiceConnectionId }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/armTemplates/.azure/environment/deployfrontdoor.json' #TODO: Change to your location
        overrideParameters: -frontDoorName ${{ parameters.frontDoorName }} -frontDoorFriendlyUrl ${{ parameters.frontDoorFriendlyUrl }} -backend1PrimaryName $(primaryFunctionAppHostName) -backend1SecondaryName $(secondaryFunctionAppHostName)
        deploymentMode: 'Incremental'
        deploymentOutputs: armOutputs

    - pwsh: |
        $var=ConvertFrom-Json $env:armOutputs

        $frontDoorFrontend=$var.frontDoorFrontend.value.ToLower()
        $identifierUri="https://$($frontDoorFrontend)"
        $replyUrl="$($identifierUri)/.auth/login/aad/callback"

        Write-Host "##vso[task.setvariable variable=identifierUri;isOutput=true]$identifierUri"
        Write-Host "##vso[task.setvariable variable=replyUrl;isOutput=true]$replyUrl"
      name: ArmTemplateOutputs

    - task: AzureCLI@2
      displayName: 'Set Custom url to Https'
      inputs:
        azureSubscription: '${{ parameters.azureServiceConnectionId }}'
        scriptType: pscore
        scriptLocation: inlineScript
        powerShellErrorActionPreference: stop
        failOnStandardError: true
        inlineScript: |
          az extension add --name front-door
          $isHttpsEnabled=az network front-door frontend-endpoint show -f ${{ parameters.frontDoorName }} -n pharmacySpecialtyEndpoint2 -g ${{ parameters.resourceGroup }} | ConvertFrom-Json

          if($isHttpsEnabled.customHttpsProvisioningState -ne "Enabled" -and $isHttpsEnabled.customHttpsProvisioningState -ne "Enabling"){
              az network front-door frontend-endpoint enable-https -f ${{ parameters.frontDoorName }} -n pharmacySpecialtyEndpoint2 -g ${{ parameters.resourceGroup }}
          }