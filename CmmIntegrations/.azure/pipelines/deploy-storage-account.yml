parameters:
  - name: region
    type: string
  
  - name: resourceGroup
    type: string
  
  - name: storageAccountName
    type: string
  
  - name: azureServiceConnectionId
    type: string

jobs:
- job: DeployStorageAccount
  displayName: 1. Deploy Storage Account

  variables:
    cmmAstuteProxyContainerName: cmmastuteproxy
    cmmAstuteProxySettingsFilename: specialtyDrugsPatientStatusUpdateSettings.json

  pool:
    vmImage: windows-latest

  steps:
    - checkout: none

    - download: current
      displayName: Download Artifacts
      artifact: armTemplates   

    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment: Create Or Update Resource Group action on ${{ parameters.resourceGroup }}'
      inputs:
        azureSubscription: '${{ parameters.azureServiceConnectionId }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/armTemplates/.azure/environment/deploystorage.json' #TODO: Change to your location
        overrideParameters: -storageAccountName ${{ parameters.storageAccountName }} -cmmAstuteProxyContainerName $(cmmAstuteProxyContainerName)
        deploymentMode: 'Incremental'
        deploymentOutputs: armOutputs

    - pwsh: |
        $var=ConvertFrom-Json $env:armOutputs

        $storageAccountConnectionString=$var.storageAccountConnectionString.value

        Write-Host "##vso[task.setvariable variable=storageAccountConnectionString;isOutput=true]$storageAccountConnectionString"
      name: ArmTemplateOutputs

    - task: AzureCLI@2
      displayName: 'Confirm Settings File Exists'
      inputs:
        azureSubscription: '${{ parameters.azureServiceConnectionId }}'
        scriptType: pscore
        scriptLocation: inlineScript
        powerShellErrorActionPreference: stop
        failOnStandardError: false
        inlineScript: |
          $doesFileExist=az storage blob exists --account-name ${{ parameters.storageAccountName }} --container-name $(cmmAstuteProxyContainerName) --name $(cmmAstuteProxySettingsFilename) --query exists --auth-mode login

          if($doesFileExist -eq "false"){
            @{ LastRunDateTimeOffset = Get-Date -Format o; ActiveRegion = "East US" } | ConvertTo-Json | Out-File $(cmmAstuteProxySettingsFilename)
            az storage blob upload --account-name ${{ parameters.storageAccountName }} --container-name $(cmmAstuteProxyContainerName) --file $(cmmAstuteProxySettingsFilename) --name $(cmmAstuteProxySettingsFilename) --auth-mode login
          }