SELECT * 
FROM (
		SELECT DISTINCT 
			ADDR.PRS_PRESCRIBER_KEY PRESCRIBER_KEY,
			ADDR.PADR_KEY PADR_KEY,
			ADDR.PADR_PRESCRIBER_ADDRESS_NUM PRESCRIB_ADDR_NUM,
			DECODE(ADDR.PADR_ADDRESS_TYPE_CODE,
				1,'HOME',
				2,'HOME/OFFICE',
				3,'HOSPITAL',
				4,'OFFICE',
				5,'OTHER',
				6,'UNKNOWN',NULL) ADDR_TYPE,
			ADDR.PADR_ADDRESS1 ADDRESS_ONE,
			ADDR.PADR_ADDRESS2 ADDRESS_TWO,
			ADDR.PADR_CITY ADDR_CITY,
			ADDR.PADR_EMAIL_ADDRESS EMAIL,
			ADDR.PADR_WEB_ADDRESS WEB_ADDR,
			ADDR.PADR_STATE_CODE STATE,
			ADDR.PADR_ZIPCODE ZIPCODE,
			ADDR.PADR_EXT ZIP_EXT,
			ADDR.PADR_COUNTY COUNTY,
			NVL(ADDR.PADR_IS_DEFAULT,'N') IS_DEFAULT,
			DECODE(ADDR.PADR_SOURCE_CODE,'E','ESV','MANUAL') ADD_SOURCE,
			ADDR.PADR_DRUG_SCHEDULE DRUG_SCHED,
			ADDR.PADR_PRACTICE_NAME PRACTICE_NAME,
			ADDR.PADR_PRESCRIBER_ID_NUM ADDR_ID_NUM,
			DECODE(ADDR.PRESCRIBER_ADDR_CONTACT_KEY,1,'PHONE',2,'FAX',3,'PPI',4,'DO NOT CONTACT',NULL) PREF_CONTACT,
			ADDR.PADR_STATUS ADDR_STATUS,
			NVL(ADDRNPI.NPI,NPI.NPI) NPI,
    
			CASE ADDRNPI.NPI WHEN
			  NULL THEN NVL(NPI.USE_FOR_BILLING,'N')
			  ELSE NVL(ADDRNPI.USE_FOR_BILLING,'N')
			END NPI_BILLING,
    
			CASE ADDRNPI.NPI WHEN
			  NULL THEN NPI.EXPIRE_DATE
			  ELSE ADDRNPI.EXPIRE_DATE
			END NPI_EXPIRE_DATE,
    
			NVL(STSTATEID.STATELIC,NVL(ADDRSTATEID.STATELIC,STATEID.STATELIC)) STATE_LIC_NUM,
			CASE STSTATEID.STATELIC WHEN
			  NULL THEN
				  CASE ADDRSTATEID.STATELIC WHEN
					 NULL THEN NVL(STATEID.USE_FOR_BILLING,'N')
					 ELSE NVL(ADDRSTATEID.USE_FOR_BILLING,'N')
				   END
			  ELSE NVL(STSTATEID.USE_FOR_BILLING,'N')
			END STATE_LIC_BILLING,
    
			CASE STSTATEID.STATELIC WHEN
			  NULL THEN
				  CASE ADDRSTATEID.STATELIC WHEN
					 NULL THEN STATEID.EXPIRE_DATE
					 ELSE ADDRSTATEID.EXPIRE_DATE
				   END
			  ELSE STSTATEID.EXPIRE_DATE
			END STATE_LIC_EXPIRE_DATE,
    
			CASE STSTATEID.STATELIC WHEN
			  NULL THEN
				  CASE ADDRSTATEID.STATELIC WHEN
					 NULL THEN STATEID.STATE
					 ELSE ADDRSTATEID.STATE
				   END
			  ELSE STSTATEID.STATE
			END LICENSE_STATE,
    
			DEA.DEA_NUM DEA_NUM,
			NVL(DEA.USE_FOR_BILLING,'N') DEA_BILLING,
			DEA.EXPIRE_DATE DEA_EXPIRE_DATE,
    
			PRIMPH.AREA_CODE AREA_CODE_PRIM,
			PRIMPH.PHONE_NUM PHONE_NUM_PRIM,
			PRIMPH.EXT EXT_PRIM,
    
			SECNPH.AREA_CODE AREA_CODE_SEC,
			SECNPH.PHONE_NUM PHONE_NUM_SEC,
			SECNPH.EXT EXT_SEC,
    
			FAXPH.AREA_CODE AREA_CODE_FAX,
			FAXPH.PHONE_NUM PHONE_NUM_FAX,
			FAXPH.EXT EXT_FAX,
    
			OTHERPH.AREA_CODE AREA_CODE_OTHER,
			OTHERPH.PHONE_NUM PHONE_NUM_OTHER,
			OTHERPH.EXT EXT_OTHER,
    
			ELSEPH.PHONE_TYPE PHONE_TYPE_OTHER2,
			ELSEPH.AREA_CODE AREA_CODE_OTHER2,
			ELSEPH.PHONE_NUM PHONE_NUM_OTHER2,
			ELSEPH.EXT EXT_OTHER2,      
			DW_LAST_UPDATE_DT AS LAST_UPDATE
       
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_ADDRESS ADDR

		--START - GETTING ALL NPI INFO FOR PRESCRIBER ADDRESS
		--START - JOIN TO GET ADDRESS-SPECIFIC NPI INFO
		LEFT OUTER JOIN
		(SELECT PID_NPI.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_NPI.PADR_KEY AS PADR_KEY,
				PID_NPI.PID_ID_TEXT AS NPI,
				PID_NPI.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_NPI.PID_EXPIRATION_DATE AS EXPIRE_DATE
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_NPI
		WHERE PID_NPI.PID_STATUS = 'A'
		AND PID_NPI.PIT_KEY = 509
		ORDER BY PID_NPI.PID_EXPIRATION_DATE DESC NULLS LAST)ADDRNPI
		ON ADDR.PRS_PRESCRIBER_KEY = ADDRNPI.PRESCRIBER_KEY
		AND ADDR.PADR_KEY = ADDRNPI.PADR_KEY
		--END - JOIN TO GET ADDRESS-SPECIFIC NPI INFO
		--START - JOIN TO GET NON-ADDRESS-SPECIFIC NPI INFO
		LEFT OUTER JOIN
		(SELECT PID_NPI.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_NPI.PADR_KEY AS PADR_KEY,
				PID_NPI.PID_ID_TEXT AS NPI,
				PID_NPI.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_NPI.PID_EXPIRATION_DATE AS EXPIRE_DATE
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_NPI
		WHERE PID_NPI.PID_STATUS = 'A'
		AND PID_NPI.PIT_KEY = 509
		ORDER BY PID_NPI.PID_EXPIRATION_DATE DESC NULLS LAST)NPI
		ON ADDR.PRS_PRESCRIBER_KEY = NPI.PRESCRIBER_KEY
		--END - JOIN TO GET NON-ADDRESS-SPECIFIC NPI INFO
		--END - GETTING ALL NPI INFO FOR PRESCRIBER ADDRESS

		--START - GETTING ALL STATE LICENSE INFO FOR PRESCRIBER ADDRESS
		--START - JOIN TO GET STATE-SPECIFIC STATE LICENSE INFO
		LEFT OUTER JOIN
		(SELECT PID_STATEID.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_STATEID.PADR_KEY AS PADR_KEY,
				PID_STATEID.PID_ID_TEXT AS STATELIC,
				PID_STATEID.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_STATEID.PID_EXPIRATION_DATE AS EXPIRE_DATE,
				PID_STATEID.PID_STATE_CODE AS STATE

		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_STATEID
		WHERE PID_STATEID.PID_STATUS = 'A'
		AND PID_STATEID.PIT_KEY = 511

		ORDER BY PID_STATEID.PID_EXPIRATION_DATE DESC NULLS LAST)STSTATEID
		ON ADDR.PRS_PRESCRIBER_KEY = STSTATEID.PRESCRIBER_KEY
		AND ADDR.PADR_STATE_CODE = STSTATEID.STATE
		--END - JOIN TO GET STATE-SPECIFIC STATE LICENSE INFO
		--START - JOIN TO GET ADDRESS-SPECIFIC STATE LICENSE INFO
		LEFT OUTER JOIN
		(SELECT PID_STATEID.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_STATEID.PADR_KEY AS PADR_KEY,
				PID_STATEID.PID_ID_TEXT AS STATELIC,
				PID_STATEID.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_STATEID.PID_EXPIRATION_DATE AS EXPIRE_DATE,
				PID_STATEID.PID_STATE_CODE AS STATE

		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_STATEID
		WHERE PID_STATEID.PID_STATUS = 'A'
		AND PID_STATEID.PIT_KEY = 511

		ORDER BY PID_STATEID.PID_EXPIRATION_DATE DESC NULLS LAST)ADDRSTATEID
		ON ADDR.PRS_PRESCRIBER_KEY = ADDRSTATEID.PRESCRIBER_KEY
		AND ADDR.PADR_KEY = ADDRSTATEID.PADR_KEY
		--END - JOIN TO GET ADDRESS-SPECIFIC STATE LICENSE INFO
		--START - JOIN TO GET NON-ADDRESS-SPECIFIC STATE LICENSE INFO
		LEFT OUTER JOIN
		(SELECT PID_STATEID.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_STATEID.PADR_KEY AS PADR_KEY,
				PID_STATEID.PID_ID_TEXT AS STATELIC,
				PID_STATEID.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_STATEID.PID_EXPIRATION_DATE AS EXPIRE_DATE,
				PID_STATEID.PID_STATE_CODE AS STATE

		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_STATEID
		WHERE PID_STATEID.PID_STATUS = 'A'
		AND PID_STATEID.PIT_KEY = 511

		ORDER BY PID_STATEID.PID_EXPIRATION_DATE DESC NULLS LAST)STATEID
		ON ADDR.PRS_PRESCRIBER_KEY = STATEID.PRESCRIBER_KEY
		--END - JOIN TO GET NON-ADDRESS-SPECIFIC STATE LICENSE INFO
		--END - GETTING ALL STATE LICENSE INFO FOR PRESCRIBER ADDRESS

		--START - JOIN TO GET DEA INFO
		LEFT OUTER JOIN
		(SELECT PID_DEA.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
				PID_DEA.PID_ID_TEXT AS DEA_NUM,
				PID_DEA.USE_FOR_BILLING AS USE_FOR_BILLING,
				PID_DEA.PID_EXPIRATION_DATE AS EXPIRE_DATE

		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_IDS PID_DEA
		WHERE PID_DEA.PID_STATUS = 'A'
		AND PID_DEA.PIT_KEY = 515

		ORDER BY PID_DEA.PID_EXPIRATION_DATE DESC NULLS LAST)DEA
		ON ADDR.PRS_PRESCRIBER_KEY = DEA.PRESCRIBER_KEY
		--END - JOIN TO GET DEA INFO

		--START--ALL PHONE INFO
		--START--PRIM NUMBERS
		LEFT OUTER JOIN(SELECT PHONE.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
			   PHONE.PADR_KEY AS PADR_KEY,
			   PHONE.PRSP_AREA_CODE AS AREA_CODE,
			   SUBSTR(PHONE.PRSP_PHONE_NUMBER,1,3)||'-'||SUBSTR(PHONE.PRSP_PHONE_NUMBER,4,4) AS PHONE_NUM,
			   PHONE.PRSP_EXT AS EXT
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_PHONE PHONE
		WHERE PHONE.PRSP_PHONE_ADDRESS_TYPE = 'PRIM'
		AND PHONE.PRSP_AREA_CODE <> '555'
		AND PHONE.PRSP_AREA_CODE <> '000'
		AND PHONE.PRSP_PHONE_NUMBER IS NOT NULL
		AND PHONE.PRSP_STATUS = 'A')PRIMPH
		ON PRIMPH.PRESCRIBER_KEY = ADDR.PRS_PRESCRIBER_KEY
		AND PRIMPH.PADR_KEY = ADDR.PADR_KEY
		--END--PRIM NUMBERS

		--START--SECN NUMBERS
		LEFT OUTER JOIN(SELECT PHONE.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
			   PHONE.PADR_KEY AS PADR_KEY,
			   PHONE.PRSP_AREA_CODE AS AREA_CODE,
			   SUBSTR(PHONE.PRSP_PHONE_NUMBER,1,3)||'-'||SUBSTR(PHONE.PRSP_PHONE_NUMBER,4,4) AS PHONE_NUM,
			   PHONE.PRSP_EXT AS EXT
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_PHONE PHONE
		WHERE PHONE.PRSP_PHONE_ADDRESS_TYPE = 'SECN'
		AND PHONE.PRSP_AREA_CODE <> '555'
		AND PHONE.PRSP_AREA_CODE <> '000'
		AND PHONE.PRSP_PHONE_NUMBER IS NOT NULL
		AND PHONE.PRSP_STATUS = 'A')SECNPH
		ON SECNPH.PRESCRIBER_KEY = ADDR.PRS_PRESCRIBER_KEY
		AND SECNPH.PADR_KEY = ADDR.PADR_KEY
		--END--SECN NUMBERS

		--START--FAX NUMBERS
		LEFT OUTER JOIN(SELECT PHONE.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
			   PHONE.PADR_KEY AS PADR_KEY,
			   PHONE.PRSP_AREA_CODE AS AREA_CODE,
			   SUBSTR(PHONE.PRSP_PHONE_NUMBER,1,3)||'-'||SUBSTR(PHONE.PRSP_PHONE_NUMBER,4,4) AS PHONE_NUM,
			   PHONE.PRSP_EXT AS EXT
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_PHONE PHONE
		WHERE PHONE.PRSP_PHONE_ADDRESS_TYPE = 'FAX'
		AND PHONE.PRSP_AREA_CODE <> '555'
		AND PHONE.PRSP_AREA_CODE <> '000'
		AND PHONE.PRSP_PHONE_NUMBER IS NOT NULL
		AND PHONE.PRSP_STATUS = 'A')FAXPH
		ON FAXPH.PRESCRIBER_KEY = ADDR.PRS_PRESCRIBER_KEY
		AND FAXPH.PADR_KEY = ADDR.PADR_KEY
		--END--FAX NUMBERS

		--START--OTHER NUMBERS
		LEFT OUTER JOIN(SELECT PHONE.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
			   PHONE.PADR_KEY AS PADR_KEY,
			   PHONE.PRSP_AREA_CODE AS AREA_CODE,
			   SUBSTR(PHONE.PRSP_PHONE_NUMBER,1,3)||'-'||SUBSTR(PHONE.PRSP_PHONE_NUMBER,4,4) AS PHONE_NUM,
			   PHONE.PRSP_EXT AS EXT
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_PHONE PHONE
		WHERE PHONE.PRSP_PHONE_ADDRESS_TYPE = 'OTHE'
		AND PHONE.PRSP_AREA_CODE <> '555'
		AND PHONE.PRSP_AREA_CODE <> '000'
		AND PHONE.PRSP_PHONE_NUMBER IS NOT NULL
		AND PHONE.PRSP_STATUS = 'A')OTHERPH
		ON OTHERPH.PRESCRIBER_KEY = ADDR.PRS_PRESCRIBER_KEY
		AND OTHERPH.PADR_KEY = ADDR.PADR_KEY
		--END--OTHER NUMBERS

		--START--OTHER2DEFAULTS NUMBERS
		LEFT OUTER JOIN(SELECT PHONE.PRS_PRESCRIBER_KEY AS PRESCRIBER_KEY,
			   PHONE.PADR_KEY AS PADR_KEY,
			   PHONE.PRSP_AREA_CODE AS AREA_CODE,
			   SUBSTR(PHONE.PRSP_PHONE_NUMBER,1,3)||'-'||SUBSTR(PHONE.PRSP_PHONE_NUMBER,4,4) AS PHONE_NUM,
			   PHONE.PRSP_EXT AS EXT,
			   DECODE(PHONE.PRSP_PHONE_TYPE,'PHON','PHONE',NULL,'PHONE',PHONE.PRSP_PHONE_TYPE) AS PHONE_TYPE
		FROM {DW}.ERXDW_PLS_ARCHIVE_VIEW.PRESCRIBER_PHONE PHONE
		WHERE PHONE.PRSP_PHONE_ADDRESS_TYPE IS NULL
		AND PHONE.PRSP_AREA_CODE <> '555'
		AND PHONE.PRSP_AREA_CODE <> '000'
		AND PHONE.PRSP_PHONE_NUMBER IS NOT NULL
		AND PHONE.PRSP_STATUS = 'A')ELSEPH
		ON ELSEPH.PRESCRIBER_KEY = ADDR.PRS_PRESCRIBER_KEY
		AND ELSEPH.PADR_KEY = ADDR.PADR_KEY
		--END--OTHER2DEFAULTS NUMBERS
		--END--ALL PHONE INFO
     )
WHERE LAST_UPDATE = (:RUNDATE - 1)::DATE
OR PADR_KEY = 12495740